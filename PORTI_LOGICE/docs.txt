Mai jos sunt prezentate explicațiile pentru fiecare poartă logică utilizată în cod, împreună cu descrierea fiecărei operații.

1. Poarta AND:
cpp
Copy code
int andResult = A & B;  // A & B -> 1 & 0 => 0 (rezultatul va fi 0)
Explicație: Poarta AND returnează 1 doar dacă ambele intrări sunt 1. În acest caz, A = 1 și B = 0, astfel că rezultatul va fi 0.
2. Poarta OR:
cpp
Copy code
int orResult = A | B;   // A | B -> 1 | 0 => 1 (rezultatul va fi 1)
Explicație: Poarta OR returnează 1 dacă cel puțin una dintre intrări este 1. În acest caz, A = 1 și B = 0, astfel că rezultatul va fi 1.
3. Poarta XOR:
cpp
Copy code
int xorResult = A ^ B;  // A ^ B -> 1 ^ 0 => 1 (rezultatul va fi 1)
Explicație: Poarta XOR returnează 1 atunci când intrările sunt diferite. În acest caz, A = 1 și B = 0, astfel că rezultatul va fi 1.
4. Poarta NOT:
cpp
Copy code
int notA = !A;          // NOT A -> !1 => 0 (rezultatul va fi 0)
Explicație: Poarta NOT returnează inversul valorii lui A. Dacă A este 1, rezultatul va fi 0.
5. Poarta NAND:
cpp
Copy code
int nandResult = !(A & B); // NAND -> !(A & B) -> !(1 & 0) => !0 => 1 (rezultatul va fi 1)
Explicație: Poarta NAND este inversul porții AND. Dacă A = 1 și B = 0, rezultatul AND va fi 0, iar rezultatul NAND va fi 1.
6. Poarta NOR:
cpp
Copy code
int norResult = !(A | B);  // NOR -> !(A | B) -> !(1 | 0) => !1 => 0 (rezultatul va fi 0)
Explicație: Poarta NOR este inversul porții OR. Dacă A = 1 și B = 0, rezultatul OR va fi 1, iar rezultatul NOR va fi 0.
7. Poarta XNOR:
cpp
Copy code
int xnorResult = !(A ^ B); // XNOR -> !(A ^ B) -> !(1 ^ 0) => !1 => 0 (rezultatul va fi 0)
Explicație: Poarta XNOR este inversul porții XOR. Dacă A = 1 și B = 0, rezultatul XOR va fi 1, iar rezultatul XNOR va fi 0.